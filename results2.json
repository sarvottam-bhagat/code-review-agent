{"pr_number":2188,"repo_url":"https://github.com/mem0ai/mem0","files":[{"name":"embedchain/embedchain/embedder/ollama.py","issues":[{"type":"bug","line":6,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":7,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":7,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":15,"description":"Potential use of undefined variable '__name__'","suggestion":"Ensure '__name__' is defined before use","severity":"high","analyzer":"bugs"},{"type":"best_practice","line":18,"description":"Class 'OllamaEmbedder' lacks a docstring","suggestion":"Add a docstring to document the class's purpose and usage","severity":"low","analyzer":"best_practices"},{"type":"best_practice","line":19,"description":"Function '__init__' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"bug","line":20,"description":"Potential use of undefined variable 'super'","suggestion":"Ensure 'super' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":24,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":24,"description":"Potential use of undefined variable 'any'","suggestion":"Ensure 'any' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":24,"description":"Potential use of undefined variable 'model'","suggestion":"Ensure 'model' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":27,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":31,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"}],"patch":"@@ -21,7 +21,7 @@ def __init__(self, config: Optional[OllamaEmbedderConfig] = None):\n \n         client = Client(host=config.base_url)\n         local_models = client.list()[\"models\"]\n-        if not any(model.get(\"name\") == self.config.model for model in local_models):\n+        if not any(model.get(\"model\") == self.config.model for model in local_models):\n             logger.info(f\"Pulling {self.config.model} from Ollama!\")\n             client.pull(self.config.model)\n         embeddings = OllamaEmbeddings(model=self.config.model, base_url=config.base_url)"},{"name":"embedchain/embedchain/llm/ollama.py","issues":[{"type":"bug","line":12,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":13,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":13,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":19,"description":"Potential use of undefined variable '__name__'","suggestion":"Ensure '__name__' is defined before use","severity":"high","analyzer":"bugs"},{"type":"best_practice","line":23,"description":"Class 'OllamaLlm' lacks a docstring","suggestion":"Add a docstring to document the class's purpose and usage","severity":"low","analyzer":"best_practices"},{"type":"best_practice","line":24,"description":"Function '__init__' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"bug","line":25,"description":"Potential use of undefined variable 'super'","suggestion":"Ensure 'super' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":31,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":31,"description":"Potential use of undefined variable 'any'","suggestion":"Ensure 'any' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":31,"description":"Potential use of undefined variable 'model'","suggestion":"Ensure 'model' is defined before use","severity":"high","analyzer":"bugs"},{"type":"best_practice","line":35,"description":"Function 'get_llm_model_answer' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"bug","line":38,"description":"Potential use of undefined variable 'staticmethod'","suggestion":"Ensure 'staticmethod' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":39,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":39,"description":"Potential use of undefined variable 'str'","suggestion":"Ensure 'str' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":39,"description":"Potential use of undefined variable 'str'","suggestion":"Ensure 'str' is defined before use","severity":"high","analyzer":"bugs"},{"type":"best_practice","line":39,"description":"Function '_get_answer' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"style","line":41,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"}],"patch":"@@ -28,7 +28,7 @@ def __init__(self, config: Optional[BaseLlmConfig] = None):\n \n         client = Client(host=config.base_url)\n         local_models = client.list()[\"models\"]\n-        if not any(model.get(\"name\") == self.config.model for model in local_models):\n+        if not any(model.get(\"model\") == self.config.model for model in local_models):\n             logger.info(f\"Pulling {self.config.model} from Ollama!\")\n             client.pull(self.config.model)\n "},{"name":"mem0/embeddings/ollama.py","issues":[{"type":"bug","line":10,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":11,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":11,"description":"Potential use of undefined variable 'input'","suggestion":"Ensure 'input' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":14,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":17,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":17,"description":"Potential use of undefined variable 'print'","suggestion":"Ensure 'print' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":20,"description":"Potential use of undefined variable 'print'","suggestion":"Ensure 'print' is defined before use","severity":"high","analyzer":"bugs"},{"type":"best_practice","line":24,"description":"Class 'OllamaEmbedding' lacks a docstring","suggestion":"Add a docstring to document the class's purpose and usage","severity":"low","analyzer":"best_practices"},{"type":"best_practice","line":25,"description":"Function '__init__' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"bug","line":26,"description":"Potential use of undefined variable 'super'","suggestion":"Ensure 'super' is defined before use","severity":"high","analyzer":"bugs"},{"type":"style","line":39,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":39,"description":"Potential use of undefined variable 'any'","suggestion":"Ensure 'any' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":39,"description":"Potential use of undefined variable 'model'","suggestion":"Ensure 'model' is defined before use","severity":"high","analyzer":"bugs"}],"patch":"@@ -36,7 +36,7 @@ def _ensure_model_exists(self):\n         Ensure the specified model exists locally. If not, pull it from Ollama.\n         \"\"\"\n         local_models = self.client.list()[\"models\"]\n-        if not any(model.get(\"name\") == self.config.model for model in local_models):\n+        if not any(model.get(\"model\") == self.config.model for model in local_models):\n             self.client.pull(self.config.model)\n \n     def embed(self, text):"},{"name":"mem0/llms/ollama.py","issues":[{"type":"style","line":6,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":26,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":70,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":71,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":72,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"style","line":73,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"bug","line":5,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":6,"description":"Potential use of undefined variable 'ImportError'","suggestion":"Ensure 'ImportError' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":14,"description":"Potential use of undefined variable 'super'","suggestion":"Ensure 'super' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":26,"description":"Potential use of undefined variable 'any'","suggestion":"Ensure 'any' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":26,"description":"Potential use of undefined variable 'model'","suggestion":"Ensure 'model' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":61,"description":"Potential use of undefined variable 'str'","suggestion":"Ensure 'str' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":61,"description":"Potential use of undefined variable 'str'","suggestion":"Ensure 'str' is defined before use","severity":"high","analyzer":"bugs"},{"type":"bug","line":64,"description":"Potential use of undefined variable 'str'","suggestion":"Ensure 'str' is defined before use","severity":"high","analyzer":"bugs"},{"type":"error","line":0,"description":"Error analyzing file: module 'ast' has no attribute 'Append'","suggestion":"Please check file content and format","severity":"high"}],"patch":"@@ -23,7 +23,7 @@ def _ensure_model_exists(self):\n         Ensure the specified model exists locally. If not, pull it from Ollama.\n         \"\"\"\n         local_models = self.client.list()[\"models\"]\n-        if not any(model.get(\"name\") == self.config.model for model in local_models):\n+        if not any(model.get(\"model\") == self.config.model for model in local_models):\n             self.client.pull(self.config.model)\n \n     def _parse_response(self, response, tools):"},{"name":"tests/embeddings/test_ollama_embeddings.py","issues":[{"type":"best_practice","line":8,"description":"Function 'mock_ollama_client' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"style","line":11,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"best_practice","line":16,"description":"Function 'test_embed_text' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"},{"type":"style","line":26,"description":"Line exceeds maximum length of 79 characters","suggestion":"Break the line into multiple lines or use line continuation","severity":"low","analyzer":"style"},{"type":"best_practice","line":31,"description":"Function 'test_ensure_model_exists' lacks a docstring","suggestion":"Add a docstring to document the function's purpose, parameters, and return value","severity":"low","analyzer":"best_practices"}],"patch":"@@ -8,7 +8,7 @@\n def mock_ollama_client():\n     with patch(\"mem0.embeddings.ollama.Client\") as mock_ollama:\n         mock_client = Mock()\n-        mock_client.list.return_value = {\"models\": [{\"name\": \"nomic-embed-text\"}]}\n+        mock_client.list.return_value = {\"models\": [{\"model\": \"nomic-embed-text\"}]}\n         mock_ollama.return_value = mock_client\n         yield mock_client\n "}],"summary":{"total_files":5,"total_issues":62,"critical_issues":31,"issues_by_type":{"style":20,"bug":30,"performance":0,"best_practice":11,"error":1}}}